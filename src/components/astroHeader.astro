---
export interface Props {
	title: string;
	subtitle: string;
	image: string;
}

const {title, subtitle, image} = Astro.props;
---

<div class="headerContainer">
	<div class="header">
		<h1>{title}</h1>
		<p>{subtitle}</p>
	</div>
	<div class="headerImage">
		<canvas id="headerCanvas"></canvas>
	</div>
</div>
<div class="blob1 blur"></div>
<div class="blob2 blur"></div>
<div class="blob3 blur"></div>
<!-- <div class="blob4 blur"></div> -->
<script>
	import {Application} from "@splinetool/runtime";
	import gsap from "gsap";

	const canvas: any = document.getElementById("headerCanvas");
	const app = new Application(canvas);
	app.load("https://prod.spline.design/4-UzVbzMpUZ7aLxY/scene.splinecode");

	const tl = gsap.timeline();
	tl.fromTo(".header", {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1, ease: "ease.inOut"}, "-=0.5")
	tl.fromTo(".headerImage", {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1, ease: "ease.inOut"});
	tl.fromTo(".headerContainer h1", {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1, ease: "ease.inOut"});
	tl.fromTo(".headerContainer p", {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1, ease: "ease.inOut"});

	document.addEventListener("DOMContentLoaded", function (event) {
		async function sleep(ms) {
			return new Promise((resolve) => setTimeout(resolve, ms));
		}
		sleep(5000).then(() => {
			tl.play();
		});
	});
</script>
<style>
	.blob1 {
		position: absolute;
		top: 30vh;
		left: -10vw;
		width: 250px;
		height: 150px;
		background-color: rgb(255, 0, 0);
		z-index: 100;
	}
	.blob2 {
		position: absolute;
		top: 70vh;
		right: 10vw;
		width: 300px;
		height: 190px;
		background-color: rgb(25, 0, 255);
		z-index: 100;
	}
	.blob3 {
		position: absolute;
		top: 80vh;
		left: 20vw;
		width: 300px;
		height: 180px;
		background-color: rgb(30, 214, 30);
		z-index: 100;
	}
	.blob4 {
		position: absolute;
		top: 130vh;
		left: 40vw;
		width: 300px;
		height: 150px;
		background-color: rgba(233, 53, 53, 0.781);
		z-index: 100;
	}
	.headerContainer {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		min-height: 100vh;
		background-color: var(--background-primary);
		overflow: visible!important;;
	}
	.header {
		width: 50%;
		padding: 0 2rem;
	}
	.header h1 {
		font-size: 7rem;
	}
	.headerImage {
		width: 100%;
	}
	.headerImage canvas {
		height: 800px !important;
		width: 1000px !important;
	}
</style>
